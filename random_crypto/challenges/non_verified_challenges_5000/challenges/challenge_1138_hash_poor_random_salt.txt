An intern hashed secret files with SHA-256, but used the timestamp as salt. Can you recover the password from this poorly protected c5c3e1ea0201752f1e699e24f5fa57b8190cc4f0138b29af473fc9cc379ae051?

The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{uf0}
ciphertext: c5c3e1ea0201752f1e699e24f5fa57b8190cc4f0138b29af473fc9cc379ae051
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

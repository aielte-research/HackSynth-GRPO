A rushed admin hashed passwords using SHA-256 with a timestamp as salt. Recover the original password from fe558d6d775f12a16c09b49e3fe3b738e65717d52a19540a43c307024e813a09, exploiting the weak randomization.

The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{0b9}
ciphertext: fe558d6d775f12a16c09b49e3fe3b738e65717d52a19540a43c307024e813a09
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

The exchange hashed passwords with SHA-256 and reused the same weak salt. Recover the original password from the hash: 8d29e0e65071b7ec43e4b2864b35a38682225152cfd4c90551f07f2135a5ba0b

The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{s00}
ciphertext: 8d29e0e65071b7ec43e4b2864b35a38682225152cfd4c90551f07f2135a5ba0b
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

Jane hashed her password with SHA-256 and a timestamp-based salt. Recover the original password from the digest: f3c7d2d2cc6d12eafd8d84ad0e277959be5557281fba2e161b07a4f92d0602bf

The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{bur}
ciphertext: f3c7d2d2cc6d12eafd8d84ad0e277959be5557281fba2e161b07a4f92d0602bf
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

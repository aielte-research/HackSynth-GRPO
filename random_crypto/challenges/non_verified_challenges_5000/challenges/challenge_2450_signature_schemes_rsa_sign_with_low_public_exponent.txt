
A hacker intercepted a signed message with public RSA key and low exponent. Crack the signature from 0x2c5a0e58b29716b06e9327260a812c8cec76bc6a5e56e87801d960f6ee21d6349b3b3a0e7a7d74d6e635166cb420e9f7ab21cee02069058bd492d15095ccb2d5 to unveil the forged approval.


Public Key (n, e): (5573140510165307473649330325996899043100820553593029472911289964295897179050481364585775925770180829238991644394708312457893853703442718386666780728774459, 3)

---

## Challenge Technical Details
flag: flag{t10jj97o}
ciphertext: 0x2c5a0e58b29716b06e9327260a812c8cec76bc6a5e56e87801d960f6ee21d6349b3b3a0e7a7d74d6e635166cb420e9f7ab21cee02069058bd492d15095ccb2d5
cipher: RSA Low-Exponent Signature
hint: What happens when you cube small numbers? Remember e=3!
necessary_info: Public Key (n, e): (5573140510165307473649330325996899043100820553593029472911289964295897179050481364585775925770180829238991644394708312457893853703442718386666780728774459, 3)
subtype: rsa_sign_with_low_public_exponent
archetype: signature_schemes

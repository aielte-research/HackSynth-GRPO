The hacker "Glitch" encrypted a secret with a weak PRNG. Can you crack the 666c60687b336c6e77636361397d ciphertext and reveal the hidden flag?

The flag format is flag{...}
A random number generator was seeded using an 8-bit value (0-255). The first outputs of the generator are: [82, 496, 267, 37, 0, 149, 481, 382, 327, 22, 279, 500, 202, 423, 551, 552, 96, 197, 576, 566]. The next PRNG output was used as a symmetric key to XOR-encrypt the flag.
secret_num = rng.randint(0, 578)

---

## Challenge Technical Details
flag: flag{3mawcbn9}
ciphertext: 666c60687b336c6e77636361397d
cipher: Low-entropy PRNG
hint: The PRNG seed space is small. You can try brute-forcing all possible seeds to reconstruct the sequence.
necessary_info: The flag format is flag{...}
A random number generator was seeded using an 8-bit value (0-255). The first outputs of the generator are: [82, 496, 267, 37, 0, 149, 481, 382, 327, 22, 279, 500, 202, 423, 551, 552, 96, 197, 576, 566]. The next PRNG output was used as a symmetric key to XOR-encrypt the flag.
secret_num = rng.randint(0, 578)
extra_info: Since the seed has only 256 possible values, it can be brute-forced to recover the secret number and decrypt the flag.
subtype: low_entropy_generator
archetype: prng

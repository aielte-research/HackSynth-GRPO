Professor Byte reused a weak salt scheme to hash passwords with SHA-256. Crack the password from this hash: 97302a1577bca9468c405c5503b64e2d4c8cfb0dfdbd1ba8f7bac03106e00a46

The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{snh}
ciphertext: 97302a1577bca9468c405c5503b64e2d4c8cfb0dfdbd1ba8f7bac03106e00a46
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

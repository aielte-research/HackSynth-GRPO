
A careless intern hashed secret files with SHA-256, reusing timestamp salts. Crack the password from this leak: addd309689770ad07706e78e46c3a149848084e80dda4b71f5c595a64087afc7


The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{9uv}
ciphertext: addd309689770ad07706e78e46c3a149848084e80dda4b71f5c595a64087afc7
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

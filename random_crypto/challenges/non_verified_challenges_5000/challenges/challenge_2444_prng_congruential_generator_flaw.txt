
A careless dev used a predictable random number generator to encrypt this flag. Can you break their LCG Predictability scheme and recover the original message? 687244b3752e4be57e2957b56163


The flag format is flag{...}
A Linear Congruential Generator (LCG) was used with the following parameters:
  - Modulus: 1031420339
  - Multiplier: 354980520
  - Increment: 303259927
The first 5 outputs of the LCG are provided: [385072291, 596001941, 214948840, 234636757, 388475022] 
The next output was used as a symmetric key to XOR-encrypt the flag.

---

## Challenge Technical Details
flag: flag{0n1p7rao}
ciphertext: 687244b3752e4be57e2957b56163
cipher: LCG Predictability
hint: LCGs are deterministic. Find the seed or deduce the next output to recover the encryption key.
necessary_info: The flag format is flag{...}
A Linear Congruential Generator (LCG) was used with the following parameters:
  - Modulus: 1031420339
  - Multiplier: 354980520
  - Increment: 303259927
The first 5 outputs of the LCG are provided: [385072291, 596001941, 214948840, 234636757, 388475022] 
The next output was used as a symmetric key to XOR-encrypt the flag.
extra_info: LCGs have a known mathematical structure. Recovering the seed allows predicting all future values.
subtype: congruential_generator_flaw
archetype: prng

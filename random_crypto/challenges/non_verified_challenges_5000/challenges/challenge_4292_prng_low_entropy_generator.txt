
Someone used a weak PRNG to encrypt their secret. Can you break the 666c616a7b7a6c3c37796f67617d ciphertext and reveal the original message?


The flag format is flag{...}
A random number generator was seeded using an 8-bit value (0-255). The first outputs of the generator are: [637, 261, 367, 667, 542, 29, 476, 255, 664, 53, 160, 115, 380, 480, 252, 389, 556, 104, 587, 255]. The next PRNG output was used as a symmetric key to XOR-encrypt the flag.
secret_num = rng.randint(0, 684)

---

## Challenge Technical Details
flag: flag{zl17yoja}
ciphertext: 666c616a7b7a6c3c37796f67617d
cipher: Low-entropy PRNG
hint: The PRNG seed space is small. You can try brute-forcing all possible seeds to reconstruct the sequence.
necessary_info: The flag format is flag{...}
A random number generator was seeded using an 8-bit value (0-255). The first outputs of the generator are: [637, 261, 367, 667, 542, 29, 476, 255, 664, 53, 160, 115, 380, 480, 252, 389, 556, 104, 587, 255]. The next PRNG output was used as a symmetric key to XOR-encrypt the flag.
secret_num = rng.randint(0, 684)
extra_info: Since the seed has only 256 possible values, it can be brute-forced to recover the secret number and decrypt the flag.
subtype: low_entropy_generator
archetype: prng

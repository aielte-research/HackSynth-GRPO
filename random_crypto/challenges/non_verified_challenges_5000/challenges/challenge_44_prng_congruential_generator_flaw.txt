
Intercepted flag fragments were scrambled using a shoddy random generator. Can you exploit the LCG's predictability to recover the plaintext from 658006fb78890bab6bd552ad3a91?


The flag format is flag{...}
A Linear Congruential Generator (LCG) was used with the following parameters:
  - Modulus: 1896127257
  - Multiplier: 429778592
  - Increment: 1591283687
The first 5 outputs of the LCG are provided: [40854833, 1400129367, 846215849, 1656420345, 540939173] 
The next output was used as a symmetric key to XOR-encrypt the flag.

---

## Challenge Technical Details
flag: flag{el7h9519}
ciphertext: 658006fb78890bab6bd552ad3a91
cipher: LCG Predictability
hint: LCGs are deterministic. Find the seed or deduce the next output to recover the encryption key.
necessary_info: The flag format is flag{...}
A Linear Congruential Generator (LCG) was used with the following parameters:
  - Modulus: 1896127257
  - Multiplier: 429778592
  - Increment: 1591283687
The first 5 outputs of the LCG are provided: [40854833, 1400129367, 846215849, 1656420345, 540939173] 
The next output was used as a symmetric key to XOR-encrypt the flag.
extra_info: LCGs have a known mathematical structure. Recovering the seed allows predicting all future values.
subtype: congruential_generator_flaw
archetype: prng

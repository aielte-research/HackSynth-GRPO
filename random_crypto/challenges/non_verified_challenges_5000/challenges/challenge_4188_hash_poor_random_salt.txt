A careless admin hashed passwords with SHA-256, but always used the same two-digit salt. Recover the original password from this hash: 589c76e2a0447dff84a17baf5d947b3a27adae7f2d0108555d3515a735935d8d

The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{12e}
ciphertext: 589c76e2a0447dff84a17baf5d947b3a27adae7f2d0108555d3515a735935d8d
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

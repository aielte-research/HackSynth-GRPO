An intercepted message uses a homebrew stream cipher based on a flawed LFSR. Can you recover the plaintext from ff1af811e213ec14a806a904ec0b?

The flag format is flag{...}
A 16-bit LFSR was used with taps [0, 2, 3, 5]. The first 10 outputs are given below. The next LFSR output was used to XOR-encrypt the flag.
[55788, 60662, 30331, 47933, 23966, 11983, 38759, 52147, 26073, 13036]

---

## Challenge Technical Details
flag: flag{eub1p0ru}
ciphertext: ff1af811e213ec14a806a904ec0b
cipher: LFSR Weakness
hint: Linear Feedback Shift Registers (LFSRs) have predictable cycles. The initial state is given.
necessary_info: The flag format is flag{...}
A 16-bit LFSR was used with taps [0, 2, 3, 5]. The first 10 outputs are given below. The next LFSR output was used to XOR-encrypt the flag.
[55788, 60662, 30331, 47933, 23966, 11983, 38759, 52147, 26073, 13036]
extra_info: LFSRs are linear, meaning their entire sequence can be reconstructed given enough outputs.
subtype: lfsr_weakness
archetype: prng

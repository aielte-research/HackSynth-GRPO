An intern hashed passwords with SHA-256, using the same hardcoded salt for every user. Recover the original password from this hash: 6e4b4f911ec68b1cbdeef9fb124064c469c58a8d83b6ba835a79a66e1513303e

The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{fzz}
ciphertext: 6e4b4f911ec68b1cbdeef9fb124064c469c58a8d83b6ba835a79a66e1513303e
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

An intern tried "rolling their own" encryption. Their predictable random number generator left secrets exposedâ€”can you recover the original message from this ciphertext? 617839d67c6329d5306d37823269

The flag format is flag{...}
A Linear Congruential Generator (LCG) was used with the following parameters:
  - Modulus: 435232740
  - Multiplier: 7185743
  - Increment: 12067962
The first 5 outputs of the LCG are provided: [213285005, 82425277, 395064773, 102421201, 405356405] 
The next output was used as a symmetric key to XOR-encrypt the flag.

---

## Challenge Technical Details
flag: flag{wqd7yo35}
ciphertext: 617839d67c6329d5306d37823269
cipher: LCG Predictability
hint: LCGs are deterministic. Find the seed or deduce the next output to recover the encryption key.
necessary_info: The flag format is flag{...}
A Linear Congruential Generator (LCG) was used with the following parameters:
  - Modulus: 435232740
  - Multiplier: 7185743
  - Increment: 12067962
The first 5 outputs of the LCG are provided: [213285005, 82425277, 395064773, 102421201, 405356405] 
The next output was used as a symmetric key to XOR-encrypt the flag.
extra_info: LCGs have a known mathematical structure. Recovering the seed allows predicting all future values.
subtype: congruential_generator_flaw
archetype: prng

An intern hashed secret messages with SHA-256, using user IDs as salts. Crack the original message from this poorly salted hash: cc386b67e0c45b8622a344c3fecff315c88bb5b88590233941fbc27e2dedbc2b

The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{xal}
ciphertext: cc386b67e0c45b8622a344c3fecff315c88bb5b88590233941fbc27e2dedbc2b
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

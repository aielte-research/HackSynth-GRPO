
A rookie dev used RSA to encrypt the flag, but chose both primes as Blum integers. Can you recover the plaintext? Ciphertext: 692906321349463573460569696224410581532548258978329335323049958196197872077688419099111147999765886864601794517660350405547662621529082899124720686325486


The flag format is flag{...}
n=5060418495105512252855243685255738335387053726803972957924022452217798355252557567178997428803212676155015120307090620435853365158831613001055074499118433, e=3407264146603320634188681129300845879173544410140410250874618528532873516048299952676141213622613907612303634461747429349989494205119621171350239354676513
The lower 104 bits of p are: 43422723169655560113325596328536005695


---

## Challenge Technical Details
flag: flag{ertpn5ah}
cipher: RSA
ciphertext: 692906321349463573460569696224410581532548258978329335323049958196197872077688419099111147999765886864601794517660350405547662621529082899124720686325486
vulnerability: blum integers
hint: Blum integers are products of primes congruent to 3 modulo 4. These integers have unique properties in cryptography.
necessary_info: The flag format is flag{...}
n=5060418495105512252855243685255738335387053726803972957924022452217798355252557567178997428803212676155015120307090620435853365158831613001055074499118433, e=3407264146603320634188681129300845879173544410140410250874618528532873516048299952676141213622613907612303634461747429349989494205119621171350239354676513
The lower 104 bits of p are: 43422723169655560113325596328536005695

extra_info: p=60666201439004578711241380951912407202891726557431136454748749361026729991231, q=83414131346156431695330411365578698161011863219762642543717758598232733480543, Ï†(n)=5060418495105512252855243685255738335387053726803972957924022452217798355252413486846212267792806104362697629201726716846076171379833146493095815035646660
subtype: blum_integers
archetype: rsa

A hacker intercepted an encrypted message sent using Diffie-Hellman key exchange. Recover the shared secret to reveal the hidden note: cb249efe3a34476b16f7391a812e

The key exchange uses a prime modulus of 101 and generator 2.
Alice's public key is 31 and Bob's public key is 69.
You received a tip that the private values are at most two digits.
You got access to some of the code:
encryption_key = hashlib.sha256(str(shared_key).encode()).digest()[:16]
encrypted_flag = bytes(a ^ b for a, b in zip(flag.encode(), encryption_key))

---

## Challenge Technical Details
flag: flag{ohkk4bd4}
ciphertext: cb249efe3a34476b16f7391a812e
cipher: Diffie-Hellman
hint: The prime used in this key exchange is small. You can recover the private key by brute-force.
necessary_info: The key exchange uses a prime modulus of 101 and generator 2.
Alice's public key is 31 and Bob's public key is 69.
You received a tip that the private values are at most two digits.
You got access to some of the code:
encryption_key = hashlib.sha256(str(shared_key).encode()).digest()[:16]
encrypted_flag = bytes(a ^ b for a, b in zip(flag.encode(), encryption_key))
extra_info: secret_a=84, secret_b=55
subtype: broken_key_exchange
archetype: web_crypto

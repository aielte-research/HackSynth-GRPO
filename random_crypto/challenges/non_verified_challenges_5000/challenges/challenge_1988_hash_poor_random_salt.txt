A web app hashes passwords with SHA-256 and adds a predictable salt. Crack Alice's password from the hashed value: 1c5c19694f0e52798956d6eb49eaf8c28f68403bb0af600b3a9f06bfedaa9f35

The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{2f1}
ciphertext: 1c5c19694f0e52798956d6eb49eaf8c28f68403bb0af600b3a9f06bfedaa9f35
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

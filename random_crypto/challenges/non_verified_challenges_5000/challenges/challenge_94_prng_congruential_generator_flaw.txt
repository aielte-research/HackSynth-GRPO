A hacker locked the secret key with a homebrew PRNG. Crack their 70f84e616da7456e77f54c3677e9 to retrieve itâ€”the generator hides a weakness. Can you predict their next move?

The flag format is flag{...}
A Linear Congruential Generator (LCG) was used with the following parameters:
  - Modulus: 2129297440
  - Multiplier: 843075458
  - Increment: 690079962
The first 5 outputs of the LCG are provided: [1466334642, 2069592318, 497187926, 1183017830, 447773542] 
The next output was used as a symmetric key to XOR-encrypt the flag.

---

## Challenge Technical Details
flag: flag{3jhaac0a}
ciphertext: 70f84e616da7456e77f54c3677e9
cipher: LCG Predictability
hint: LCGs are deterministic. Find the seed or deduce the next output to recover the encryption key.
necessary_info: The flag format is flag{...}
A Linear Congruential Generator (LCG) was used with the following parameters:
  - Modulus: 2129297440
  - Multiplier: 843075458
  - Increment: 690079962
The first 5 outputs of the LCG are provided: [1466334642, 2069592318, 497187926, 1183017830, 447773542] 
The next output was used as a symmetric key to XOR-encrypt the flag.
extra_info: LCGs have a known mathematical structure. Recovering the seed allows predicting all future values.
subtype: congruential_generator_flaw
archetype: prng

An engineer quickly signed a message with a low public exponent. The resulting 0x920dabf4826c2b6598c1676fa4f44a82853ad6b62d33cb2b7702b98a2cf8d851aaa67c951cfb83fbedaaa256b7e28d367680319860993887363de778b53c70eb awaits your analysis to expose the original signature.

Public Key (n, e): (10012555166322103874603819972358718895229833629816118821454071189457065432351019136549296167993728350283900262744441433608436050194027412071390693413004007, 3)

---

## Challenge Technical Details
flag: flag{q6dzkh2r}
ciphertext: 0x920dabf4826c2b6598c1676fa4f44a82853ad6b62d33cb2b7702b98a2cf8d851aaa67c951cfb83fbedaaa256b7e28d367680319860993887363de778b53c70eb
cipher: RSA Low-Exponent Signature
hint: What happens when you cube small numbers? Remember e=3!
necessary_info: Public Key (n, e): (10012555166322103874603819972358718895229833629816118821454071189457065432351019136549296167993728350283900262744441433608436050194027412071390693413004007, 3)
subtype: rsa_sign_with_low_public_exponent
archetype: signature_schemes

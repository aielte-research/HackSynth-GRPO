
Agents exchanged secrets using Diffie-Hellman, but intercepted messages may reveal the key. Recover the shared secret from 2c28bd724d2969c967de39e44f38 to unveil their communication.


The key exchange uses a prime modulus of 101 and generator 2.
Alice's public key is 91 and Bob's public key is 44.
You received a tip that the private values are at most two digits.
You got access to some of the code:
encryption_key = hashlib.sha256(str(shared_key).encode()).digest()[:16]
encrypted_flag = bytes(a ^ b for a, b in zip(flag.encode(), encryption_key))

---

## Challenge Technical Details
flag: flag{kmah67tv}
ciphertext: 2c28bd724d2969c967de39e44f38
cipher: Diffie-Hellman
hint: The prime used in this key exchange is small. You can recover the private key by brute-force.
necessary_info: The key exchange uses a prime modulus of 101 and generator 2.
Alice's public key is 91 and Bob's public key is 44.
You received a tip that the private values are at most two digits.
You got access to some of the code:
encryption_key = hashlib.sha256(str(shared_key).encode()).digest()[:16]
encrypted_flag = bytes(a ^ b for a, b in zip(flag.encode(), encryption_key))
extra_info: secret_a=75, secret_b=15
subtype: broken_key_exchange
archetype: web_crypto


A rushed developer hashed passwords with SHA-256 using a salt generated from the server's current minute. Can you recover the original password from 579bf209d2c438796f4d250ef36e0c3e8615fd0678725143040f9c19274d8161?


The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()

---

## Challenge Technical Details
flag: flag{5vr}
ciphertext: 579bf209d2c438796f4d250ef36e0c3e8615fd0678725143040f9c19274d8161
cipher: SHA-256
vulnerability: poor random salt
hint: You can brute-force the solution.
necessary_info: The salt is the flag with the format flag{salt}.
The code that generated the flag:
salt = ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(3))hashlib.sha256((salt + "apple").encode('utf-8')).hexdigest()
subtype: poor_random_salt
archetype: hash

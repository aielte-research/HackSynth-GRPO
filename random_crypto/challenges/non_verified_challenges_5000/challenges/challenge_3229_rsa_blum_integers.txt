The bank used RSA, but generated its modulus as a Blum integer for efficiency. Crack the secret message: 1303913474959554007600790599992263637091760606100201847428022111711827399702875746727237377955336524269972771317980039755735670497791383249019503955368512

The flag format is flag{...}
n=7472689747105512113875885104177845079723631771812204664390045836453086454033856791989925226928068922119713614010484643532393426918372801051502386822360697, e=161614057847966229505228724517680909297167689661711942683315879328137900132657957569836587751851903234195710219646093429273123413845434682841331546384413
The lower 104 bits of p are: 55729240457199703932444013002737910223


---

## Challenge Technical Details
flag: flag{o0chxa7e}
cipher: RSA
ciphertext: 1303913474959554007600790599992263637091760606100201847428022111711827399702875746727237377955336524269972771317980039755735670497791383249019503955368512
vulnerability: blum integers
hint: Blum integers are products of primes congruent to 3 modulo 4. These integers have unique properties in cryptography.
necessary_info: The flag format is flag{...}
n=7472689747105512113875885104177845079723631771812204664390045836453086454033856791989925226928068922119713614010484643532393426918372801051502386822360697, e=161614057847966229505228724517680909297167689661711942683315879328137900132657957569836587751851903234195710219646093429273123413845434682841331546384413
The lower 104 bits of p are: 55729240457199703932444013002737910223

extra_info: p=105956156669685302411459807535739270594122716724952223283336056819193871925711, q=70526243891625543166819521271849690633899056736738939044420081512565793801527, Ï†(n)=7472689747105512113875885104177845079723631771812204664390045836453086454033680309589363916082490642790906025049256621758931735756045044913170627156633460
subtype: blum_integers
archetype: rsa
